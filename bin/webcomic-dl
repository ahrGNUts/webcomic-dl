#!/usr/bin/python
import webcomic_dl
from webcomic_dl.comics import *
from webcomic_dl import cli, Comic, util
import requests
import os.path
import os
import json

def getComicClass(comic):
    """Return the class appropriate for a given comic name or URL"""
    for c in Comic.__subclasses__():
        if(c.match(args.comic)):
            print("using {0} downloader".format(c.__name__))
            return c

def getMetafile(directory):
    return os.path.join(directory, "info.json")

def getTmpMetafile(directory):
    return os.path.join(directory, ".info.json.tmp")

def getMeta(directory):
    """Return a dict containing the metadata for this comic"""
    metaFile=getMetafile(directory)
    if(os.path.isfile(metaFile)):
        with open(metaFile, "r") as f:
            return json.loads(f.read())
    return {}

def saveMeta(directory:str, meta:str, pretty:bool=False):
    """Save the metadata dict atomically"""
    metaFile=getMetafile(directory)
    tmpfile=getTmpMetafile(directory)
    with open(tmpfile, "w") as f:
        if(pretty):
            string=prettyprint(meta)
        else:
            string=json.dumps(meta)
        f.write(string)
    if(os.path.isfile(tmpfile)):
        os.rename(tmpfile, metaFile)

def getMetaItem(meta, n):
    key="{0}".format(n).zfill(6)
    if(not key in meta):
        return None
    return meta[key]

def addMetaItem(meta, n, item):
    meta["{0}".format(n).zfill(6)]=item

args=cli.getArgs()
cls=getComicClass(args.comic)


if(args.fromURL):
    comic=cls(args.comic)
else:
    comic=cls(cls.first)

if(args.directory):
    comic.setDir(args.directory)

meta=getMeta(comic.directory)

while comic:
    n=comic.getNumber()
    if(not (args.resume and getMetaItem(meta, n))):
        comic.load()
        if(args.verbose):
            print(prettyprint(comic.toDict()))
        comic.download(args.directory, args.overwrite)
        addMetaItem(meta, n, comic.toDict())
        saveMeta(comic.directory, meta, args.pretty)
    nextMeta=getMetaItem(meta, n+1)
    nextURL=None if nextMeta is None else nextMeta["url"]
    comic=comic.getNextComic(nextURL)
print("Done!")
